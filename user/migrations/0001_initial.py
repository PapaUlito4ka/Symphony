# Generated by Django 4.1.2 on 2022-10-19 22:14

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("artist", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None, unique=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "user",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "full_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="users_photos/full_photos",
                        verbose_name="full photo",
                    ),
                ),
                (
                    "preview_photo",
                    models.ImageField(
                        blank=True,
                        editable=False,
                        null=True,
                        upload_to="users_photos/full_photos",
                        verbose_name="full photo",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created_at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated_at"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="profile",
                        serialize=False,
                        to="user.user",
                    ),
                ),
                ("username", models.CharField(max_length=64, unique=True)),
            ],
            options={
                "db_table": "user_profile",
            },
        ),
        migrations.CreateModel(
            name="UserFollower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_request", models.BooleanField(default=False)),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follows_set",
                        to="user.user",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follower_set",
                        to="user.user",
                    ),
                ),
            ],
            options={
                "db_table": "user_follower",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="followers",
            field=models.ManyToManyField(through="user.UserFollower", to="user.user"),
        ),
        migrations.AddField(
            model_name="user",
            name="friends",
            field=models.ManyToManyField(
                db_table="user_friend", related_name="friend_set", to="user.user"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="songs",
            field=models.ManyToManyField(db_table="user_song", to="artist.song"),
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="users_photos/full_photos",
                        verbose_name="full photo",
                    ),
                ),
                (
                    "preview_photo",
                    models.ImageField(
                        blank=True,
                        editable=False,
                        null=True,
                        upload_to="users_photos/full_photos",
                        verbose_name="full photo",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created_at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated_at"),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "songs",
                    models.ManyToManyField(db_table="playlist_song", to="artist.song"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlists",
                        to="user.user",
                    ),
                ),
            ],
            options={
                "db_table": "playlist",
            },
        ),
    ]
